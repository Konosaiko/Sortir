{% extends 'base.html.twig' %}

{% block title %}Mise à jour du profil{% endblock %}

{% block body %}
    <div class="container mt-4">
        {{ form_start(form, {'attr': {'novalidate': 'novalidate', 'data-turbo': 'false'}}) }}
        <h2 class="mb-3">Mise à jour de votre profil</h2>

        {% for flash_message in app.flashes('success') %}
            <div class="alert alert-success" role="alert">
                {{ flash_message }}
            </div>
        {% endfor %}
        {% for flash_message in app.flashes('error') %}
            <div class="alert alert-danger" role="alert">
                {{ flash_message }}
            </div>
        {% endfor %}

        {% for field in form %}
            {# Exclure le champ CSRF Token de l'affichage #}
            {% if field.vars.name != '_token' and field.vars.name != 'plainPassword' %}
                <div class="form-group mb-3 {% if field.vars.errors %}has-error{% endif %}">
                    {{ form_label(field) }}
                    {{ form_widget(field, {'attr': {'class': 'form-control'}}) }}
                    {% if field.vars.errors %}
                        <div class="invalid-feedback d-block">
                            {{ form_errors(field) }}
                        </div>
                    {% else %}
                        <small class="form-text text-muted">{{ form_help(field) }}</small>
                    {% endif %}
                </div>
            {% endif %}
        {% endfor %}

        {# Traiter les champs de mot de passe séparément #}
        <div class="form-group mb-3">
            {{ form_label(form.plainPassword.first) }}
            {{ form_widget(form.plainPassword.first, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form.plainPassword.first) }}
        </div>
        <div class="form-group mb-3">
            {{ form_label(form.plainPassword.second) }}
            {{ form_widget(form.plainPassword.second, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form.plainPassword.second) }}
        </div>

        <div class="text-center">
            <button type="submit" class="btn btn-primary">Mettre à jour</button>
        </div>
        {{ form_end(form) }}
    </div>



<script>

        document.addEventListener('DOMContentLoaded', () => {
            const passwordField = document.querySelector('#user_profile_plainPassword_first');
            const confirmPasswordField = document.querySelector('#user_profile_plainPassword_second');

            let passwordError = document.getElementById('passwordError');
            if (!passwordError) {
                passwordError = document.createElement('div');
                passwordError.id = 'passwordError';
                passwordError.style.color = 'red';
            }

            // Function to check password length
            function checkPasswordLength() {
                if (passwordField.value.length > 0 && passwordField.value.length < 6) {
                    passwordError.textContent = 'Le mot de passe est trop court.';
                    if (!passwordField.nextElementSibling || passwordField.nextElementSibling.id !== 'passwordError') {
                        passwordField.parentNode.insertBefore(passwordError, passwordField.nextSibling);
                    }
                } else {
                    passwordError.textContent = '';
                }
            }

            // Function to check if passwords match
            function checkPasswordsMatch() {
                if (passwordField.value && confirmPasswordField.value && passwordField.value !== confirmPasswordField.value) {
                    passwordError.textContent = 'Les mots de passe ne correspondent pas.';
                    if (!confirmPasswordField.nextElementSibling || confirmPasswordField.nextElementSibling.id !== 'passwordError') {
                        confirmPasswordField.parentNode.insertBefore(passwordError, confirmPasswordField.nextSibling);
                    }
                } else {
                    passwordError.textContent = '';
                }
            }

            passwordField.addEventListener('input', checkPasswordLength);
            confirmPasswordField.addEventListener('input', checkPasswordsMatch);
        });
    </script>




{% endblock %}
